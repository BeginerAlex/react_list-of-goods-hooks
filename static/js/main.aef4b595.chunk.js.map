{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","SORT_DEFAULT","sortField","setSortField","isReverse","setReverse","getListOfGoods","goods","prepareGoods","sort","good1","good2","SORT_BY_ALPHABET","localeCompare","SORT_BY_LENGTH","length","reverse","getPrepareGoods","className","onClick","type","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,uCAAAA,E,gCAAAA,E,iBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,cAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SACEC,EAAiBL,EAAqBE,GAEtC,IAAII,EAAY,YAAOD,GAevB,OAbIL,IACFM,EAAeA,EAAaC,MAAK,SAACC,EAAOC,GACvC,OAAQT,GACN,KAAKL,EAASe,iBACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,eACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,OAKXX,EACKI,EAAaQ,UAGfR,EAMgBS,CACrBnB,EAAiBI,EAAWE,GAoB9B,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QArBoB,WAC1BhB,EAAaN,EAASe,mBAqBhBQ,KAAK,SACLF,UACEG,IAAG,iBACD,CAAE,WAAYnB,IAAcL,EAASe,mBAL3C,iCAWA,wBACEO,QA5BsB,WAC5BhB,EAAaN,EAASiB,iBA4BhBM,KAAK,SACLF,UACEG,IAAG,oBACD,CAAE,WAAYnB,IAAcL,EAASiB,iBAL3C,4BAWA,wBACEK,QAnCmB,WACzBd,GAAW,SAAAiB,GAAI,OAAKA,MAmCdF,KAAK,SACLF,UACEG,IAAG,oBACD,CAAE,YAAajB,IALrB,sBAWEA,GAA2B,KAAdF,IACb,wBACEiB,QA3CS,WACjBhB,EAAaN,EAASI,cACtBI,GAAW,IA0CHe,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,6BACGZ,EAAeiB,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aef4b595.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SORT_BY_ALPHABET = 'Sort alphabetically',\n  SORT_BY_LENGTH = 'Sort by length',\n  SORT_DEFAULT = '',\n}\n\nfunction getPrepareGoods(\n  goods: string[], sortField: SortType, isReverse: boolean,\n) {\n  let prepareGoods = [...goods];\n\n  if (sortField) {\n    prepareGoods = prepareGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    return prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.SORT_DEFAULT);\n  const [isReverse, setReverse] = useState(false);\n  const getListOfGoods = getPrepareGoods(\n    goodsFromServer, sortField, isReverse,\n  );\n\n  const handleClickSortName = () => {\n    setSortField(SortType.SORT_BY_ALPHABET);\n  };\n\n  const handleClickSortLength = () => {\n    setSortField(SortType.SORT_BY_LENGTH);\n  };\n\n  const handleReverseClick = () => {\n    setReverse(prev => !prev);\n  };\n\n  const resetClick = () => {\n    setSortField(SortType.SORT_DEFAULT);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handleClickSortName}\n          type=\"button\"\n          className={\n            cn('button is-info',\n              { 'is-light': sortField !== SortType.SORT_BY_ALPHABET })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleClickSortLength}\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortField !== SortType.SORT_BY_LENGTH })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverseClick}\n          type=\"button\"\n          className={\n            cn('button is-warning',\n              { 'is-light': !isReverse })\n          }\n        >\n          Reverse\n        </button>\n\n        {(isReverse || sortField !== '') && (\n          <button\n            onClick={resetClick}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {getListOfGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}